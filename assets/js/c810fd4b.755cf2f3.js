"use strict";(self.webpackChunk_griffel_website=self.webpackChunk_griffel_website||[]).push([[308],{6276:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=t(7896),a=t(1461),i=(t(2784),t(876)),s=(t(465),["components"]),o={sidebar_position:6},d="createDOMRenderer",c={unversionedId:"react/api/create-dom-renderer",id:"react/api/create-dom-renderer",title:"createDOMRenderer",description:"createDOMRenderer is paired with RendererProvider component and is useful for child window rendering and SSR scenarios. This is the default renderer for web, and will make sure that styles are injected to a document.",source:"@site/docs/react/api/create-dom-renderer.md",sourceDirName:"react/api",slug:"/react/api/create-dom-renderer",permalink:"/react/api/create-dom-renderer",draft:!1,editUrl:"https://github.com/microsoft/griffel/tree/main/apps/website/docs/react/api/create-dom-renderer.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"reactSidebar",previous:{title:"makeResetStyles",permalink:"/react/api/make-reset-styles"},next:{title:"Atomic CSS",permalink:"/react/guides/atomic-css"}},l={},p=[{value:"styleElementAttributes",id:"styleelementattributes",level:3}],m={toc:p};function u(e){var r=e.components,t=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"createdomrenderer"},"createDOMRenderer"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"createDOMRenderer")," is paired with ",(0,i.kt)("inlineCode",{parentName:"p"},"RendererProvider")," component and is useful for ",(0,i.kt)("a",{parentName:"p",href:"/react/guides/child-window-rendering"},"child window rendering")," and ",(0,i.kt)("a",{parentName:"p",href:"/react/guides/ssr-usage"},"SSR")," scenarios. This is the default renderer for web, and will make sure that styles are injected to a document."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { createDOMRenderer, RendererProvider } from '@griffel/react';\n\nfunction App(props) {\n  const { targetDocument } = props;\n  const renderer = React.useMemo(() => createDOMRenderer(targetDocument), [targetDocument]);\n\n  return (\n    <RendererProvider renderer={renderer} targetDocument={targetDocument}>\n      {/* Children components */}\n      {/* ... */}\n    </RendererProvider>\n  );\n}\n")),(0,i.kt)("h3",{id:"styleelementattributes"},"styleElementAttributes"),(0,i.kt)("p",null,"A map of attributes that's passed to the generated style elements. For example, is useful to set ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce"},'"nonce" attribute'),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { createDOMRenderer } from '@griffel/react';\n\nconst renderer = createDOMRenderer(targetDocument, {\n  styleElementAttributes: {\n    nonce: 'random',\n  },\n});\n")))}u.isMDXComponent=!0}}]);