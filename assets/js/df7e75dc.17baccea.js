"use strict";(self.webpackChunk_griffel_website=self.webpackChunk_griffel_website||[]).push([[536],{9463:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>h,default:()=>c,frontMatter:()=>d,metadata:()=>i,toc:()=>p});var t=n(7896),r=n(1461),a=(n(2784),n(876)),o=(n(465),["components"]),d={sidebar_position:3},h="shorthands",i={unversionedId:"react/api/shorthands",id:"react/api/shorthands",title:"shorthands",description:"Check limitations to understand why these helpers are needed.",source:"@site/docs/react/api/shorthands.md",sourceDirName:"react/api",slug:"/react/api/shorthands",permalink:"/react/api/shorthands",draft:!1,editUrl:"https://github.com/microsoft/griffel/tree/main/apps/website/docs/react/api/shorthands.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"reactSidebar",previous:{title:"mergeClasses",permalink:"/react/api/merge-classes"},next:{title:"makeStaticStyles",permalink:"/react/api/make-static-styles"}},l={},p=[{value:"<code>shorthands.border</code>",id:"shorthandsborder",level:3},{value:"<code>shorthands.borderBottom</code>",id:"shorthandsborderbottom",level:3},{value:"<code>shorthands.borderColor</code>",id:"shorthandsbordercolor",level:3},{value:"<code>shorthands.borderStyle</code>",id:"shorthandsborderstyle",level:3},{value:"<code>shorthands.borderWidth</code>",id:"shorthandsborderwidth",level:3},{value:"<code>shorthands.flex</code>",id:"shorthandsflex",level:3},{value:"<code>shorthands.gap</code>",id:"shorthandsgap",level:3},{value:"<code>shorthands.gridArea</code>",id:"shorthandsgridarea",level:3},{value:"<code>shorthands.inset</code>",id:"shorthandsinset",level:3},{value:"<code>shorthands.margin</code>",id:"shorthandsmargin",level:3},{value:"<code>shorthands.overflow</code>",id:"shorthandsoverflow",level:3},{value:"<code>shorthands.padding</code>",id:"shorthandspadding",level:3},{value:"<code>shorthands.transition</code>",id:"shorthandstransition",level:3}],m={toc:p};function c(e){var s=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,t.Z)({},m,n,{components:s,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"shorthands"},"shorthands"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Check ",(0,a.kt)("a",{parentName:"p",href:"/react/guides/limitations"},"limitations")," to understand why these helpers are needed.")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"shorthands")," provides a set of functions to mimic ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties"},"CSS shorthands")," and improve developer experience as ",(0,a.kt)("a",{parentName:"p",href:"/react/guides/limitations#css-shorthands-are-not-supported"},"CSS shorthands are not supported")," by Griffel. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    // \u274c This is not supported, TypeScript compiler will throw, styles will not be inserted to DOM\n    padding: '2px 4px 8px 16px',\n    // \u2705 Use shorthand functions to avoid writting CSS longhands\n    ...shorthands.padding('2px', '4px', '8px', '16px'),\n  },\n});\n")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The most of the functions follow syntax in matching CSS properties, but each value should a separate argument:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// \u274c Will produce wrong results\nshorthands.padding('2px 4px');\n// \u2705 Correct output\nshorthands.padding('2px', '4px');\n"))),(0,a.kt)("p",null,"Function in a ",(0,a.kt)("inlineCode",{parentName:"p"},"shorthand")," set are pure, you can simply use ",(0,a.kt)("inlineCode",{parentName:"p"},"console.log")," to better understand produced rules:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"console.log(padding('12px', '24px', '36px', '48px'));\n// \u2b07\ufe0f\u2b07\ufe0f\u2b07\ufe0f\n// {\n//  paddingBottom: '36px',\n//  paddingLeft: '48px',\n//  paddingRight: '24px',\n//  paddingTop: '12px',\n// }\n")),(0,a.kt)("h3",{id:"shorthandsborder"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.border")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.border('2px'),\n    ...shorthands.border('2px', 'solid'),\n    ...shorthands.border('2px', 'solid', 'red'),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandsborderbottom"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.borderBottom")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    // The same is true for \"borderTop\", \"borderLeft\" & \"borderRight\"\n    ...shorthands.borderBottom('2px'),\n    ...shorthands.borderBottom('2px', 'solid'),\n    ...shorthands.borderBottom('2px', 'solid', 'red'),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandsbordercolor"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.borderColor")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.borderColor('red'),\n    ...shorthands.borderColor('red', 'blue'),\n    ...shorthands.borderColor('red', 'blue', 'green'),\n    ...shorthands.borderColor('red', 'blue', 'green', 'yellow'),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandsborderstyle"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.borderStyle")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.borderStyle('solid'),\n    ...shorthands.borderStyle('solid', 'dashed'),\n    ...shorthands.borderStyle('solid', 'dashed', 'dotted'),\n    ...shorthands.borderStyle('solid', 'dashed', 'dotted', 'double'),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandsborderwidth"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.borderWidth")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.borderWidth('12px'),\n    ...shorthands.borderWidth('12px', '24px'),\n    ...shorthands.borderWidth('12px', '24px', '36px'),\n    ...shorthands.borderWidth('12px', '24px', '36px', '48px'),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandsflex"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.flex")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.flex('auto'),\n    ...shorthands.flex(1, '2.5rem'),\n    ...shorthands.flex(0, 0, 'auto'),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandsgap"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.gap")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.gap('12px'),\n    ...shorthands.gap('12px', '24px'),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandsgridarea"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.gridArea")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.gridArea('auto'),\n    ...shorthands.gridArea('first', 'second'),\n    ...shorthands.gridArea(2, 4, 'span footer'),\n    ...shorthands.gridArea(2, 4, 1, 3),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandsinset"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.inset")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.inset('10px'),\n    ...shorthands.inset('10px', '5px'),\n    ...shorthands.inset('2px', '4px', '8px'),\n    ...shorthands.inset('1px', 0, '3px', '4px'),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandsmargin"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.margin")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.margin('12px'),\n    ...shorthands.margin('12px', '24px'),\n    ...shorthands.margin('12px', '24px', '36px'),\n    ...shorthands.margin('12px', '24px', '36px', '48px'),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandsoverflow"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.overflow")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.overflow('visible'),\n    ...shorthands.overflow('visible', 'hidden'),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandspadding"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.padding")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.padding('12px'),\n    ...shorthands.padding('12px', '24px'),\n    ...shorthands.padding('12px', '24px', '36px'),\n    ...shorthands.padding('12px', '24px', '36px', '48px'),\n  },\n});\n")),(0,a.kt)("h3",{id:"shorthandstransition"},(0,a.kt)("inlineCode",{parentName:"h3"},"shorthands.transition")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { makeStyles, shorthands } from '@griffel/react';\n\nconst useClasses = makeStyles({\n  root: {\n    ...shorthands.transition('inherit'),\n    ...shorthands.transition('margin-right', '2s'),\n    ...shorthands.transition('margin-right', '4s', '1s'),\n    ...shorthands.transition('margin-right', '4s', '1s', 'ease-in'),\n    ...shorthands.transition([\n      ['margin-right', '4s', '1s', 'ease-in'],\n      ['margin-left', '2s', '0s', 'ease-in-out'],\n    ]),\n  },\n});\n")))}c.isMDXComponent=!0}}]);