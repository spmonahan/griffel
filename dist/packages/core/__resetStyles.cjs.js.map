{"version":3,"file":"__resetStyles.cjs.js","sources":["../../../packages/core/src/__resetStyles.ts"],"sourcesContent":["import type { MakeStylesOptions } from './types';\n\n/**\n * @internal\n */\nexport function __resetStyles(ltrClassName: string, rtlClassName: string | null, cssRules: string[]) {\n  const insertionCache: Record<string, boolean> = {};\n\n  function computeClassName(options: MakeStylesOptions): string {\n    const { dir, renderer } = options;\n\n    const isLTR = dir === 'ltr';\n    // As RTL classes are different they should have a different cache key for insertion\n    const rendererId = isLTR ? renderer.id : renderer.id + 'r';\n\n    if (insertionCache[rendererId] === undefined) {\n      renderer.insertCSSRules({ r: cssRules! });\n      insertionCache[rendererId] = true;\n    }\n\n    return isLTR ? ltrClassName : rtlClassName || ltrClassName;\n  }\n\n  return computeClassName;\n}\n"],"names":["__resetStyles","ltrClassName","rtlClassName","cssRules","insertionCache","computeClassName","options","dir","renderer","isLTR","rendererId","id","undefined","insertCSSRules","r"],"mappings":";;;;AAEA;;;SAGgBA,cAAcC,cAAsBC,cAA6BC;EAC/E,MAAMC,cAAc,GAA4B,EAAhD;;EAEA,SAASC,gBAAT,CAA0BC,OAA1B;IACE,MAAM;MAAEC,GAAF;MAAOC;QAAaF,OAA1B;IAEA,MAAMG,KAAK,GAAGF,GAAG,KAAK,KAAtB;;IAEA,MAAMG,UAAU,GAAGD,KAAK,GAAGD,QAAQ,CAACG,EAAZ,GAAiBH,QAAQ,CAACG,EAAT,GAAc,GAAvD;;IAEA,IAAIP,cAAc,CAACM,UAAD,CAAd,KAA+BE,SAAnC,EAA8C;MAC5CJ,QAAQ,CAACK,cAAT,CAAwB;QAAEC,CAAC,EAAEX;OAA7B;MACAC,cAAc,CAACM,UAAD,CAAd,GAA6B,IAA7B;;;IAGF,OAAOD,KAAK,GAAGR,YAAH,GAAkBC,YAAY,IAAID,YAA9C;;;EAGF,OAAOI,gBAAP;AACD;;;;"}